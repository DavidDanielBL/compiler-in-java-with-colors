package compit5;

import java.awt.Color;
import javax.swing.JFrame;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FramePrincipal.java
 *
 * Created on 03/12/2010, 06:57:29 PM
 */
/**
 *
 * @author USUARIO
 */
public class FramePrincipal extends javax.swing.JFrame {

    JFrame ventananuevo;
    boolean colores = false;
    char caracter;

    /** Creates new form FramePrincipal */
    public FramePrincipal() {
        ventananuevo = new JFrame();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtAFuente = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtAresultados = new javax.swing.JTextArea();
        btnCompilar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnColores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtxtAFuente.setColumns(20);
        jtxtAFuente.setRows(5);
        jtxtAFuente.setText("if a4= 0;\ndsa / * - | &\ndsa ");
        jtxtAFuente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtAFuenteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtAFuenteKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jtxtAFuente);

        jtxtAresultados.setColumns(20);
        jtxtAresultados.setRows(5);
        jScrollPane2.setViewportView(jtxtAresultados);

        btnCompilar.setText("Compilar");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");

        jLabel1.setText("Analisis Lexico");

        btnColores.setText("Colores");
        btnColores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(btnCompilar)
                            .addGap(40, 40, 40)
                            .addComponent(btnLimpiar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnColores))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(228, 228, 228)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(btnCompilar)
                    .addComponent(btnColores))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtAFuenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAFuenteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtAFuenteKeyPressed

    private void jtxtAFuenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAFuenteKeyTyped



        System.out.print("-" + evt.getKeyChar());
        caracter = evt.getKeyChar();

        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtAFuenteKeyTyped

    private void btnColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColoresActionPerformed

        colores = true;
        ventananuevo.setSize(100, 200);
        ventananuevo.setVisible(true);
        ColorPane nuevo = new ColorPane();
        nuevo.appendNaive(Color.red, texto);
        System.out.print("-" + caracter);
        String cadena = "";



        // while(cadena!=null)



        ventananuevo.add(nuevo);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnColoresActionPerformed

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed


        texto = jtxtAFuente.getText();
        String identificador = "";
        char nexttemp = ' ';
        char temp = ' ';
        Token token = new Token();
           for (int i = 0; i < texto.length(); i++) {
            System.out.println(texto.charAt(i));
            temp = texto.charAt(i);

            if (temp == '\n') {
                contadordesaltodelineas++;
                token.setLineadecodigo(contadordesaltodelineas);
            }

            if (token.isletra(temp)) {
                int posactual = i;

              
                if (posactual < texto.length() - 1) {
                    nexttemp = texto.charAt(posactual + 1);
                }
                while (token.isletra(nexttemp) || token.isdigit(nexttemp)) {

                    if (posactual < texto.length() - 1) {
                        nexttemp = texto.charAt(posactual + 1);
                        posactual++;
                        identificador += String.valueOf(temp);
                        temp = texto.charAt(posactual);
                    }
                }
                i = posactual;
                
                System.out.println("Es identificador   " + identificador);
                
                if(token.isPalabraReservada(identificador))
                    
                jtxtAresultados.append("Es palabrareservada " +identificador+"\n");
                else
                jtxtAresultados.append("Es identificador   " + identificador+"\n");


                identificador = "";
            }

            if(token.isoperadormatematico(temp))
                 jtxtAresultados.append("Es operador "+ String.valueOf(temp)+"\n" );
            if(token.isoperadorlogico(temp))
                 jtxtAresultados.append("Es operador logico "+ String.valueOf(temp)+"\n" );


                    
        }
       
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompilarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });







    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColores;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jtxtAFuente;
    private javax.swing.JTextArea jtxtAresultados;
    // End of variables declaration//GEN-END:variables
    String texto;
    int contadordesaltodelineas = 0;
}
